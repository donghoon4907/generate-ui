import type { NextPage } from "next";
import Head from "next/head";
import type { CSSProperties } from "react";
import { useState } from "react";
import styled from "styled-components";

import * as Component from "../../components/partial/Component";
import * as Grid from "../../components/partial/Grid";
import type { ISelectOption } from "../../interfaces/select";
import { CountingInput } from "../../components/CountingInput";
import { FeedbackInput } from "../../components/Input";
import { Preview } from "../../components/Preview";
import { CountNumberType } from "../../types/count";
import { RequireLabel } from "../../components/RequireLabel";
import { langOptions } from "../../components/options/Template";
import { mixinEllipsisText } from "../../theme/mixins/text";
import { LangOption } from "../../types/select-option";
import { ConvertCheckbox } from "../../lib/style/checkbox";
import { copyToClipboard } from "../../lib/copy/clipboard";
import { useTheme } from "../../hooks/useTheme";
import { FontOption } from "../../components/templates/options/Font";
import { PreferenceOption } from "../../components/templates/options/Preference";

const StyledInput = styled.input<{
  label: string;
  color: string;
  fontSize: number;
  scale: number;
}>`
  position: relative;
  transform: scale(${({ scale }) => scale});

  &:before {
    content: "${({ label }) => label}";

    position: absolute;
    top: 50%;
    left: calc(100% + 5px);
    transform: translate3d(0, -50%, 0);
    color: ${({ color }) => color};
    font-size: ${({ fontSize }) => fontSize}px;
    width: ${({ scale }) => 100 / scale}px;

    ${mixinEllipsisText}
  }
`;

const ComponentCheckbox: NextPage = () => {
  /* order - state */
  const { theme } = useTheme();
  // 라벨
  const [label, setLabel] = useState("Checkbox");
  // 크기
  const [scale, setScale] = useState(1.2);
  // 텍스트 색
  const [color, setColor] = useState(theme.textColor_lv0);
  // 텍스트 크기
  const [fontSize, setFontSize] = useState(16);
  // 언어
  const [lang, setLang] = useState<ISelectOption>(langOptions[0]);
  // html 템플릿 추가 여부
  const [html, setHtml] = useState(false);
  /* order - variable */
  // grid span
  const gridSpan = 3;
  // preview style
  const checkboxStyle: CSSProperties = {
    position: "relative",
    transform: `scale(${scale})`
  };

  const labelStyle: CSSProperties = {
    color,
    fontSize
  };
  /* handler */
  const handleExport = () => {
    const exportToInput = new ConvertCheckbox(checkboxStyle, labelStyle);

    if (lang.value === LangOption.JS) {
      exportToInput.generateCheckbox(label);
    }

    if (html) {
      exportToInput.addTemplate();
    }

    copyToClipboard(exportToInput.getHtml);
  };

  return (
    <>
      <Head>
        <title>Components - Checkbox</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Component.Container>
        <Component.Aside>
          <Preview
            width={Math.round(13 * scale)}
            height={Math.round(13 * scale)}
            onExport={handleExport}
          >
            <StyledInput
              type="checkbox"
              label={label}
              color={color}
              fontSize={fontSize}
              scale={scale}
            />
          </Preview>
        </Component.Aside>
        <Component.Section>
          <Component.Header>Options</Component.Header>
          <Component.Scrollable>
            <Grid.ResponsiveContainer span={gridSpan}>
              <Grid.FoldableTitle span={gridSpan} title="레이아웃 설정">
                <Grid.Column span={1}>
                  <RequireLabel htmlFor="setScale">체크박스 크기</RequireLabel>
                  <CountingInput
                    id="setScale"
                    ariaLabel="배경색 Alpha"
                    count={scale}
                    setCount={setScale}
                    limit={5}
                    showIcon={true}
                    showFeedback={true}
                    numberType={CountNumberType.DECIMAL}
                    unit=""
                  />
                </Grid.Column>
              </Grid.FoldableTitle>

              <Grid.FoldableTitle span={gridSpan} title="텍스트 설정">
                <Grid.Column span={1}>
                  <RequireLabel htmlFor="setLabel">설명</RequireLabel>
                  <FeedbackInput
                    id="setLabel"
                    value={label}
                    setValue={setLabel}
                    limit={10}
                    showFeedback={true}
                  />
                </Grid.Column>
                <FontOption
                  span={1}
                  id="Checkbox"
                  color={color}
                  setColor={setColor}
                  fontSize={fontSize}
                  setFontSize={setFontSize}
                />
              </Grid.FoldableTitle>

              <Grid.FoldableTitle span={gridSpan} title="환경 설정">
                <PreferenceOption
                  span={1}
                  lang={lang}
                  setLang={setLang}
                  html={html}
                  setHtml={setHtml}
                />
              </Grid.FoldableTitle>
            </Grid.ResponsiveContainer>
          </Component.Scrollable>
        </Component.Section>
      </Component.Container>
    </>
  );
};

export default ComponentCheckbox;
