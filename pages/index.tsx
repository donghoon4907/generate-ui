import type { NextPage } from "next";
import Head from "next/head";
import { ChangeEvent, useRef, useState } from "react";
import styled from "styled-components";
import { AiOutlineMinus, AiOutlinePlus } from "react-icons/ai";

import { mixinBgLv1, mixinBgLv2 } from "../theme/mixins/background";
import { ValidCountingInput } from "../components/ValidCountingInput";

const StylingContainer = styled.div`
  display: flex;
  align-items: center;
  flex-direction: row;
  gap: 5px;

  width: 100%;
  height: 300px;
  border: 1px solid ${({ theme }) => theme.dividerColor};
  padding: 5px;
`;

const StylingBody = styled.div`
  width: 300px;
  height: 100%;

  display: flex;
  flex-direction: column;
  border: 1px solid ${({ theme }) => theme.dividerColor};
  flex-shrink: 0;

  ${mixinBgLv1}
`;

const StylingHeader = styled.div`
  display: flex;
  justify-content: flex-start;
  align-items: center;

  padding: 5px 10px;
  border-bottom: 1px solid ${({ theme }) => theme.dividerColor};

  ${mixinBgLv2}
`;

const StylingOutput = styled.div`
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;

  padding: 5px;
`;

const StylingOption = styled.div`
  flex: 1;
  height: 100%;

  display: flex;
  flex-direction: column;

  border: 1px solid ${({ theme }) => theme.dividerColor};

  ${mixinBgLv1}
`;

const StylingOptionBody = styled.div`
  display: grid;
  gap: 5px;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-flow: row;
`;

const StylingOptionItem = styled.div`
  grid-column: span 1;
  padding: 5px;
`;

const StylingOptionLabel = styled.label`
  padding-left: 10px;
`;

const StylingOptionInput = styled.div`
  flex: 1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 5px;
`;

const Select = styled.select`
  width: 100%;
  height: 30px;
`;

const Home: NextPage = () => {
  const [el, setEl] = useState("none");

  const handleChangeEl = (evt: ChangeEvent<HTMLSelectElement>) => {
    setEl(evt.target.value);
  };

  return (
    <>
      <Head>
        <title>Feed</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <StylingContainer>
        <StylingBody>
          <StylingHeader>Output</StylingHeader>
          <StylingOutput>
            {el === "none" && <div>먼저 스타일링할 요소를 선택하세요.</div>}
            {el === "button" && (
              <div>
                <button style={{ width: 50, height: 50 }}>버튼</button>
              </div>
            )}
          </StylingOutput>
        </StylingBody>
        <StylingOption>
          <StylingHeader>Options</StylingHeader>
          <StylingOptionBody>
            <StylingOptionItem>
              <label>요소</label>
              <Select onChange={handleChangeEl}>
                <option value="none">선택하세요</option>
                <option value="button">버튼</option>
                <option value="select">셀렉트</option>
                <option value="input">단일 입력</option>
                <option value="checkbox">체크박스</option>
              </Select>
            </StylingOptionItem>
            <StylingOptionItem>
              <label>너비</label>
              <ValidCountingInput
                defaultValue={100}
                limit={250}
                showIcon={true}
                showFeedback={true}
              />
            </StylingOptionItem>
          </StylingOptionBody>
        </StylingOption>
      </StylingContainer>
    </>
  );
};

export default Home;
